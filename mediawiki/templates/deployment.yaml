apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: app
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}'
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
        - name: MEDIAWIKI_DB_HOST
          value: {{ template "db.fullname" . | default .Values.db.service.name }}
        - name: MEDIAWIKI_DB_PORT
          value: {{ .Values.db.service.port | quote }}
        - name: MEDIAWIKI_DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: db_user
        - name: MEDIAWIKI_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: db_password
        - name: MEDIAWIKI_DB_NAME
          value: {{ .Values.db.mysqlDatabase | quote }}
        - name: MEDIAWIKI_DB_SCHEMA
          value: {{ .Values.db.dbSchema | quote }}
        - name: MEDIAWIKI_ADMIN_USER
          value: {{ default "" .Values.adminUser | quote }}
        - name: MEDIAWIKI_ADMIN_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mediawiki_password
        - name: MEDIAWIKI_EMAIL
          value: {{ default "" .Values.mediawikiEmail | quote }}
        - name: MEDIAWIKI_SITE_SERVER
          value: https://{{ index .Values.ingress.hosts 0 | default .Values.CI_ENVIRONMENT_HOSTNAME | default "http://localhost" }}
        - name: MEDIAWIKI_SITE_NAME
          value: {{ .Values.mediawikiName | quote }}
        - name: MEDIAWIKI_SITE_LANG
          value: {{ .Values.mediawikiLang | quote }}
        - name: MEDIAWIKI_EXTENSIONS
          value: {{ .Values.mediawikiExts | quote }}
        - name: SMTP_HOST_ID
          value: {{ default "" .Values.smtpHostID | quote }}
        - name: SMTP_HOST
          value: {{ default "" .Values.smtpHost | quote }}
        - name: SMTP_PORT
          value: {{ default "" .Values.smtpPort | quote }}
        - name: SMTP_USER
          value: {{ default "" .Values.smtpUser | quote }}
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: smtp_password
        {{- if .Values.node_services.enabled }}
        - name: PARSOID_URL
          value: http://{{ template "fullname" . }}-parsoid:8142
        - name: PARSOID_DOMAIN
          value: localhost
        - name: RESTBASE_URL
          value: http://{{ template "fullname" . }}-restbase:7231
        {{- end }}
        {{- if .Values.ldap.enabled }}
        - name: LDAP_DOMAIN
          value: {{ .Values.ldap.domain }}
        - name: LDAP_SERVER
          value: {{ .Values.ldap.server }}
        - name: LDAP_PORT
          value: {{ .Values.ldap.port | quote }}
        - name: LDAP_BASE_DN
          value: {{ .Values.ldap.baseDn }}
        {{- if .Values.ldap.searchStrings }}
        - name: LDAP_SEARCH_STRINGS
          value: {{ .Values.ldap.searchStrings }}
        {{- end }}
        {{- if .Values.ldap.searchAttrs }}
        - name: LDAP_SEARCH_ATTRS
          value: {{ .Values.ldap.searchAttrs }}
        {{- end }}
        {{- if .Values.ldap.proxyAgent }}
        - name: LDAP_PROXY_AGENT
          value: {{ .Values.ldap.proxyAgent }}
        {{- end }}
        {{- if .Values.ldap.proxyPassword }}
        - name: LDAP_PROXY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: ldap_proxy_password
        {{- end }}
        - name: LDAP_DEBUG
          value: {{ .Values.ldap.debug | quote }}
        - name: LDAP_ENCRYPTION_TYPE
          value: {{ .Values.ldap.encryption }}
        {{- end }}
        - name: MEDIAWIKI_MAIN_CACHE
          value: {{ .Values.mainCache }}
        {{- if .Values.memcached.enabled }}
        - name: MEDIAWIKI_MEMCACHED_SERVERS
          value: '["{{ template "fullname" . }}-memcached:11211"]'
        {{- end }}
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /index.php/Main_Page
            port: http
          initialDelaySeconds: 60
        readinessProbe:
          httpGet:
            path: /index.php/Main_Page
            port: http
          initialDelaySeconds: 30
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: mediawiki-data
          mountPath: /data
      volumes:
      - name: mediawiki-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-app-pvc
      {{- else }}
        emptyDir: {}
      {{- end }}

{{- if .Values.node_services.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-node-services
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: services
spec:
  replicas: {{ .Values.node_services.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-node-services
    spec:
      containers:
      - name: {{ template "fullname" . }}-node-services
        image: '{{ .Values.node_services.image.repository }}:{{ .Values.node_services.image.tag | default "latest" }}'
        imagePullPolicy: {{ default "" .Values.node_services.imagePullPolicy | quote }}
        env:
        - name: MEDIAWIKI_API_URL
          value: http://{{ template "fullname" . }}{{ .Values.apiPath }}
        ports:
        - name: parsoid
          containerPort: 8142
        - name: restbase
          containerPort: 7231
        livenessProbe:
          httpGet:
            path: /
            port: parsoid
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: parsoid
          initialDelaySeconds: 15
        resources:
{{ toYaml .Values.node_services.resources | indent 10 }}
        volumeMounts:
        - name: node-services-data
          mountPath: /data
      volumes:
      - name: node-services-data
      {{- if .Values.node_services.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-services-pvc
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- end -}}


{{- if .Values.memcached.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-memcached
  labels:
    {{- include "common_labels" . | indent 4 }}
    tier: cache
spec:
  replicas: {{ .Values.memcached.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-memcached
    spec:
      containers:
      - name: {{ template "fullname" . }}-memcached
        image: '{{ .Values.memcached.image.repository }}:{{ .Values.memcached.image.tag | default "latest" }}'
        imagePullPolicy: {{ default "" .Values.memcached.imagePullPolicy | quote }}
        args: ["-m", "{{ .Values.memcached.memory }}"]
        ports:
        - name: memcached
          containerPort: 11211
        livenessProbe:
          tcpSocket:
            port: 11211
        readinessProbe:
          tcpSocket:
            port: 11211
        resources:
{{ toYaml .Values.memcached.resources | indent 10 }}
{{- end -}}
